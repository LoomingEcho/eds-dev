{"version":3,"file":"createOptimizedPicture.WABB6dB3.js","sources":["../../src/utils/fetchData.ts","../../src/utils/createOptimizedPicture.ts"],"sourcesContent":["interface FetchDataOptions {\n  endpoint: string;\n  getJson?: boolean;\n  init?: RequestInit | undefined;\n}\n\nexport const fetchData = async <T>(options: FetchDataOptions): Promise<T> => {\n  const { endpoint, getJson = false, init } = options;\n  const decoratedEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\n\n  const response = await fetch(`${window.hlx.codeBasePath}${decoratedEndpoint}`, init);\n\n  if (getJson) {\n    return await response.json();\n  }\n  return (await response.text()) as unknown as T;\n};\n","/**\n * Returns a picture element with webp and fallbacks\n * @param {string} src The image URL\n * @param {string} [alt] The image alternative text\n * @param {boolean} [eager] Set loading attribute to eager\n * @param {Array} [breakpoints] Breakpoints and corresponding params (eg. width)\n * @returns {Element} The picture element\n */\n\ninterface CreateOptimizedPictureArgs {\n  src: string;\n  alt: string;\n  eager?: boolean;\n  breakpoints?: Array<Record<string, string>>;\n}\n\nexport function createOptimizedPicture(args: CreateOptimizedPictureArgs): HTMLPictureElement {\n  const {\n    src,\n    alt,\n    eager = false,\n    breakpoints = [{ media: '(min-width: 600px)', width: '2000' }, { width: '750' }],\n  } = args;\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}\n"],"names":["fetchData","options","endpoint","getJson","init","decoratedEndpoint","response","createOptimizedPicture","args","src","alt","eager","breakpoints","url","picture","pathname","ext","br","source","img"],"mappings":"AAMa,MAAAA,EAAY,MAAUC,GAA0C,CAC3E,KAAM,CAAE,SAAAC,EAAU,QAAAC,EAAU,GAAO,KAAAC,GAASH,EACtCI,EAAoBH,EAAS,WAAW,GAAG,EAAIA,EAAW,IAAIA,CAAQ,GAEtEI,EAAW,MAAM,MAAM,GAAG,OAAO,IAAI,YAAY,GAAGD,CAAiB,GAAID,CAAI,EAEnF,OAAID,EACK,MAAMG,EAAS,OAEhB,MAAMA,EAAS,MACzB,ECAO,SAASC,EAAuBC,EAAsD,CACrF,KAAA,CACJ,IAAAC,EACA,IAAAC,EACA,MAAAC,EAAQ,GACR,YAAAC,EAAc,CAAC,CAAE,MAAO,qBAAsB,MAAO,QAAU,CAAE,MAAO,MAAO,CAC7E,EAAAJ,EACEK,EAAM,IAAI,IAAIJ,EAAK,OAAO,SAAS,IAAI,EACvCK,EAAU,SAAS,cAAc,SAAS,EAC1C,CAAE,SAAAC,CAAa,EAAAF,EACfG,EAAMD,EAAS,UAAUA,EAAS,YAAY,GAAG,EAAI,CAAC,EAGhD,OAAAH,EAAA,QAASK,GAAO,CACpB,MAAAC,EAAS,SAAS,cAAc,QAAQ,EAC1CD,EAAG,OAAcC,EAAA,aAAa,QAASD,EAAG,KAAK,EAC5CC,EAAA,aAAa,OAAQ,YAAY,EACxCA,EAAO,aAAa,SAAU,GAAGH,CAAQ,UAAUE,EAAG,KAAK,gCAAgC,EAC3FH,EAAQ,YAAYI,CAAM,CAAA,CAC3B,EAGWN,EAAA,QAAQ,CAACK,EAAI,IAAM,CACzB,GAAA,EAAIL,EAAY,OAAS,EAAG,CACxB,MAAAM,EAAS,SAAS,cAAc,QAAQ,EAC1CD,EAAG,OAAcC,EAAA,aAAa,QAASD,EAAG,KAAK,EAC5CC,EAAA,aAAa,SAAU,GAAGH,CAAQ,UAAUE,EAAG,KAAK,WAAWD,CAAG,kBAAkB,EAC3FF,EAAQ,YAAYI,CAAM,CAAA,KACrB,CACC,MAAAC,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,aAAa,UAAWR,EAAQ,QAAU,MAAM,EAChDQ,EAAA,aAAa,MAAOT,CAAG,EAC3BI,EAAQ,YAAYK,CAAG,EACnBA,EAAA,aAAa,MAAO,GAAGJ,CAAQ,UAAUE,EAAG,KAAK,WAAWD,CAAG,kBAAkB,CACvF,CAAA,CACD,EAEMF,CACT"}